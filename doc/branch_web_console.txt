REQUIREMENTS

DONE - zero install (probably python bottle)

- surface all the setup_tool features in a web context

  - monitoring interface (basically registry list)
    DONE perhaps a panel that shows all registered devices
    DONE control status (demands)  show switch status (demand only if rx only device)
    DONE click on a device switch to turn it on and off
    DONE monitor status (readings) show all readings as they arrive

  - other buttons
    DONE legacy learn mode start/stop
    DONE mihome discovery start/stop
    DONE logging mode start/stop
    DONE rename device
    DONE delete device
    DONE legacy learn mode UI (house code and device code)
    DONE legacy learn mode poll transmit

    DONE mihome discovery mode back end poll receive
    DONE mihome discovery mode
      just use auto join accept?
      might be quite hard to get user to answer a question in web flow?
      what appears on the UI as devices report data??

    - logging (naive)
    DONE always log data to the csv file
    DONE give user an option to download the file
    DONE give user an option to delete the file
    DONE from the /list screen, send back any messages received this poll period
      when rendering template

TODO: decide how to handle symlinks to energenie folder, we want zero install
  (perhaps energenie.init creates them on first run if not there??)

TODO: Need some instructions on how to run and use the web_console


NOT DOING (leave to others to innovate)
    picture of the raw energenie device (leave to others to innovate)
    user assigned picture for what is plugged into it? (leave to others to innovate)
